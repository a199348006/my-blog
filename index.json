[{"content":"前言  透過參考文獻實作過後紀錄一下概要。\n 套件版本：\n express: ^4.17.1 multer: ^1.4.4  API Upload File Upload-server-side  其他multer中的options選項可以參考Multer的GitHub官方說明。\n util/middleware.js\nconst multer = require(\u0026#39;multer\u0026#39;) const storage = multer.diskStorage({ destination: \u0026#39;D:/upload-files\u0026#39;, filename: function (req, file, callback) { // 取得上傳的檔案名稱及副檔名作為存入destination的檔名  callback(null, file.originalname) } }) const upload = multer({ storage: storage }).single(\u0026#39;file\u0026#39;) exports.uploadFile = (req, res, next) =\u0026gt; { upload(req, res, function (err) { if(err instanceof multer.MulterError) { console.log(\u0026#39;Multer error: \u0026#39;, err) res.status(400) } else if(err) { console.log(\u0026#39;Upload error: \u0026#39;, err) res.status(400) } else { next() } }) } routes/index.js\nconst { uploadFile } = require(\u0026#39;../util/middleware\u0026#39;) router.post(\u0026#39;/upload\u0026#39;, uploadFile, (req, res) =\u0026gt; { console.log(req.file) console.log(req.body) res.status(200) }) Upload-client-side html\n\u0026lt;head\u0026gt; \u0026lt;script src=\u0026#34;https://code.jquery.com/jquery-3.6.0.min.js\u0026#34; integrity=\u0026#34;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;input type=\u0026#34;file\u0026#34; id=\u0026#34;myfile\u0026#34;\u0026gt; \u0026lt;button id=\u0026#34;btn-post\u0026#34;\u0026gt;Click\u0026lt;/button\u0026gt; \u0026lt;script\u0026gt; $(\u0026#34;#btn-post\u0026#34;).click(function () { let formData = new FormData() formData.append(\u0026#39;title\u0026#39;, \u0026#39;This is title.\u0026#39;) // 與multer().single(\u0026#39;file\u0026#39;)對應  formData.append(\u0026#39;file\u0026#39;, $(\u0026#34;#myfile\u0026#34;).prop(\u0026#34;files\u0026#34;)[0]) axios({ url: \u0026#39;http://localhost:port/upload\u0026#39;, method: \u0026#39;POST\u0026#39;, data: formData }) }) \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; Upload-result  將有/無檔案印出的結果差異紀錄。\n result with file\n{ fieldname: 'file', originalname: 'ppt.pptx', encoding: '7bit', mimetype: 'application/vnd.openxmlformats-officedocument.presentationml.presentation', destination: 'D:/upload-files', filename: 'ppt.pptx', path: 'D:\\\\upload-files\\\\ppt.pptx', size: 341753 } [Object: null prototype] { title: 'This is title.' } result without file\nundefined [Object: null prototype] { title: 'This is title.', file: 'undefined' } Download File Download-server-side controller/downloadFile.js\nexports.downloadFile = (req, res) =\u0026gt; { const fileName = req.params.name const directoryPath = \u0026#39;D:/upload-files/\u0026#39; res.download(directoryPath + fileName, fileName, (err) =\u0026gt; { if(err) { res.status(500).send({ message: \u0026#39;download fail: \u0026#39; + err }) } }) } routes/index.js\nconst { downloadFile } = require(\u0026#39;../controller/downloadFile\u0026#39;) router.get(\u0026#39;/downloadFile/:name\u0026#39;, downloadFile) Download-client-side html\naxios({ url: `http://localhost:port/downloadFile/${fileName}`, method: \u0026#39;GET\u0026#39;, responseType: \u0026#39;blob\u0026#39;, }).then((response) =\u0026gt; { const url = window.URL.createObjectURL(new Blob([response.data])); const link = document.createElement(\u0026#39;a\u0026#39;); link.href = url; link.setAttribute(\u0026#39;download\u0026#39;, fileName); document.body.appendChild(link); link.click(); }); How to download files using axios\n 另一種下載檔案的方法則是利用window.open，但瀏覽器會自動開啟關閉一個新分頁，就看是否能接受這樣的呈現方式。\n window.open(`http://localhost:port/downloadFile/${fileName}`) 參考來源 Multer example\nExpress: res.download()\n","permalink":"https://a199348006.github.io/my-blog/2022/02/upload-download-file/","summary":"前言  透過參考文獻實作過後紀錄一下概要。\n 套件版本：\n express: ^4.17.1 multer: ^1.4.4  API Upload File Upload-server-side  其他multer中的options選項可以參考Multer的GitHub官方說明。\n util/middleware.js\nconst multer = require(\u0026#39;multer\u0026#39;) const storage = multer.diskStorage({ destination: \u0026#39;D:/upload-files\u0026#39;, filename: function (req, file, callback) { // 取得上傳的檔案名稱及副檔名作為存入destination的檔名  callback(null, file.originalname) } }) const upload = multer({ storage: storage }).single(\u0026#39;file\u0026#39;) exports.uploadFile = (req, res, next) =\u0026gt; { upload(req, res, function (err) { if(err instanceof multer.MulterError) { console.log(\u0026#39;Multer error: \u0026#39;, err) res.status(400) } else if(err) { console.","title":"使用Express架設檔案上傳/下載API"},{"content":"前言  網路上已有了許多教學及流程可以參考，在實作過程中還算順利，所以這邊就只附上我個人的參考文獻，並提出些碰到的狀況。\n Q: found no layout file for \u0026ldquo;HTML\u0026rdquo; for \u0026ldquo;page\u0026rdquo; 這是在我推上github之後，想在本地端啟動server所發生的錯誤，解決方式如下：\n重新下載：\n  git submodule init\n  git submodule update\n  參考來源\n參考來源 Hugo介紹\n官方文件-Host on GitHub\n如何將Hugo部落格部署到Github上?\nGitHub Actions\n","permalink":"https://a199348006.github.io/my-blog/2022/01/hugo/","summary":"前言  網路上已有了許多教學及流程可以參考，在實作過程中還算順利，所以這邊就只附上我個人的參考文獻，並提出些碰到的狀況。\n Q: found no layout file for \u0026ldquo;HTML\u0026rdquo; for \u0026ldquo;page\u0026rdquo; 這是在我推上github之後，想在本地端啟動server所發生的錯誤，解決方式如下：\n重新下載：\n  git submodule init\n  git submodule update\n  參考來源\n參考來源 Hugo介紹\n官方文件-Host on GitHub\n如何將Hugo部落格部署到Github上?\nGitHub Actions","title":"使用Hugo部署至GitHub"},{"content":"更改XAMPP文字編輯器  點右上角config鈕 在Editor方塊內選文字編輯器(ex:Notepad++)   更改phpMyAdmin認證模式，開啟檔案：phpMyAdmin(config.inc.php)  將[\u0026lsquo;auth_type\u0026rsquo;] = \u0026lsquo;config\u0026rsquo;; 改成 [\u0026lsquo;auth_type\u0026rsquo;] = \u0026lsquo;cookie\u0026rsquo;; (網頁式密碼輸入對話框) 或 [\u0026lsquo;auth_type\u0026rsquo;] = \u0026lsquo;http\u0026rsquo;; (彈出式密碼輸入對話框) 如果改成\u0026rsquo;http'，則可修改密鑰 $cfg[\u0026lsquo;blowfish_secret\u0026rsquo;] = \u0026lsquo;xampp\u0026rsquo; (不改也可) 儲存後重新啟動控制面板   啟動如出現錯誤  檢查xampp是否放置於中文資料夾 點選右側NetStat鈕 ，查看80(http)、443(https)、3306(MySQL)Port是否被佔用   更改http 80port為8080port，開啟檔案：Apache(httpd.conf)   搜尋80(有兩處要改)\nListen 8080\nServerName localhost:8080\n   更改預設首頁資料夾，開啟檔案：Apache(httpd.conf)  搜尋 \u0026lsquo;htdocs\u0026rsquo; 修改路徑1：DocumentRoot \u0026ldquo;C:/xampp/htdocs/xxxxx\u0026rdquo; 修改路徑2：Directory \u0026ldquo;C:/xampp/htdocs/xxxxx\u0026rdquo;  P.S. 也可在C:\\XAMPP\\htdocs中修改index.php內容：header(\u0026lsquo;Location: \u0026lsquo;.$uri.'/xxx/');\n 避免瀏覽器列出檔案目錄，開啟檔案：Apache(httpd.conf)  上面更改htdocs的位置下方 Options Indexes FollowSymLinks Includes ExecCGI (刪除Indexes)   更改PHP能使用短標籤，開啟檔案：PHP(php.ini)  搜尋 \u0026lsquo;short\u0026rsquo; 更改為 short_open_tag=on   更改時區，開啟檔案：PHP(php.ini)  將內容拉至最下方 修改為 date.timezone=Asia/Taipei   是否顯示錯誤訊息，開啟檔案：PHP(php.ini)  搜尋\u0026rsquo;dispaly\u0026rsquo; 修改為display_errors=Off  config.inc.php 新增密碼後 $cfg['Servers'][$i]['password'] = 'xxxxxx'; 出現 Access Denied for User 'root'@'localhost' (using password : NO) 錯誤\n 在 my.ini 檔案中的 [mysqld] 段落中新增一行 skip-grant-tables 重新啟動 Apache 和 MySQL   設定遠端可連線phpMyAdmin  修改 [httpd-xampp.conf] 檔案中93和105行的 Require local 改成 Require all granted 重新啟動XAMPP的 Apache 和 MySQL   參考來源 http://ep.ckvs.tyc.edu.tw/blog/files/6-5919-9316.php\n","permalink":"https://a199348006.github.io/my-blog/2022/01/xampp-setting/","summary":"更改XAMPP文字編輯器  點右上角config鈕 在Editor方塊內選文字編輯器(ex:Notepad++)   更改phpMyAdmin認證模式，開啟檔案：phpMyAdmin(config.inc.php)  將[\u0026lsquo;auth_type\u0026rsquo;] = \u0026lsquo;config\u0026rsquo;; 改成 [\u0026lsquo;auth_type\u0026rsquo;] = \u0026lsquo;cookie\u0026rsquo;; (網頁式密碼輸入對話框) 或 [\u0026lsquo;auth_type\u0026rsquo;] = \u0026lsquo;http\u0026rsquo;; (彈出式密碼輸入對話框) 如果改成\u0026rsquo;http'，則可修改密鑰 $cfg[\u0026lsquo;blowfish_secret\u0026rsquo;] = \u0026lsquo;xampp\u0026rsquo; (不改也可) 儲存後重新啟動控制面板   啟動如出現錯誤  檢查xampp是否放置於中文資料夾 點選右側NetStat鈕 ，查看80(http)、443(https)、3306(MySQL)Port是否被佔用   更改http 80port為8080port，開啟檔案：Apache(httpd.conf)   搜尋80(有兩處要改)\nListen 8080\nServerName localhost:8080\n   更改預設首頁資料夾，開啟檔案：Apache(httpd.conf)  搜尋 \u0026lsquo;htdocs\u0026rsquo; 修改路徑1：DocumentRoot \u0026ldquo;C:/xampp/htdocs/xxxxx\u0026rdquo; 修改路徑2：Directory \u0026ldquo;C:/xampp/htdocs/xxxxx\u0026rdquo;  P.S. 也可在C:\\XAMPP\\htdocs中修改index.php內容：header(\u0026lsquo;Location: \u0026lsquo;.$uri.'/xxx/');\n 避免瀏覽器列出檔案目錄，開啟檔案：Apache(httpd.conf)  上面更改htdocs的位置下方 Options Indexes FollowSymLinks Includes ExecCGI (刪除Indexes)   更改PHP能使用短標籤，開啟檔案：PHP(php.","title":"XAMPP常用設定"}]